- binary_sensor:
    - name: "area_office1_occupied"
      device_class: "occupancy"
      delay_off:
        minutes: 5
      delay_on:
        seconds: 3
      state: >
        {{ is_state('input_boolean.home_occupied', 'on')
            and states('sensor.office_switches_electric_consumption_w')|float > 5  }}

    - name: area_office2_occupied
      device_class: "occupancy"
      delay_off:
        minutes: 5
      delay_on:
        seconds: 3
      state: >-
        {{ (is_state('input_boolean.home_occupied', 'on')
            and is_state('binary_sensor.unit_1_experiment_rcwl0516_movement', 'on')) }}

    - name: Main Floor Occupancy
      device_class: "occupancy"
      delay_off:
        minutes: 5
      delay_on:
        seconds: 3
      state: >-
        {{
            is_state('binary_sensor.area_bedroom_occupied', 'on')
          or is_state('binary_sensor.area_bathroom_occupied', 'on')
          or is_state('binary_sensor.area_livingroom_occupied', 'on')
          or is_state('binary_sensor.area_kitchen1_occupied', 'on')
          or is_state('binary_sensor.area_office1_occupied', 'on')
        }}

    - name: first_floor_occupancy
      device_class: "occupancy"
      delay_off:
        minutes: 5
      delay_on:
        seconds: 3
      state: >-
        {{ (is_state('input_boolean.home_occupied', 'on')
              and (
                  is_state('binary_sensor.area_office2_occupied', 'on')
                or is_state('binary_sensor.area_livingroom_occupancy', 'on')
              ))
        }}

    - name: unit1_backroom_occupancy
      device_class: "occupancy"
      delay_off:
        minutes: 5
      delay_on:
        seconds: 3
      state: >-
        {{ is_state('binary_sensor.backroom_motion', 'on')
              or is_state('binary_sensor.multisensor_kitchen1_motion', 'on')
        }}

    - unique_id: area_bedroom1_bright
      name: "Area - Bedroom1 Bright"
      device_class: light
      attributes:
        current_illuminance: "{{ (states('sensor.multisensor_bedroom1_illuminance') | float(0)) }}"
        light_state: "{{ states('light.bedroom_lights') }}"
        sun: "{{ states('sun.sun') }}"
      state: "{{ (states('sensor.multisensor_bedroom1_illuminance') | int(0) > states('input_number.area_bedroom_lux_level') | int(0)) and (is_state('sun.sun', 'above_horizon') or is_state('light.bedroom1', 'off')) }}"

- sensor:
    - unique_id: area_bathroom_probability
      name: Area - Bathroom Probability
      state_class: measurement
      unit_of_measurement: "%"
      state: "{{ (state_attr('binary_sensor.area_bathroom_occupied','probability')*100 | int) | round(0) }}"

    - unique_id: area_kitchen1_probability
      name: Area - Kitchen1 Probability
      state_class: measurement
      unit_of_measurement: "%"
      state: "{{ (state_attr('binary_sensor.area_kitchen1_occupied','probability')*100 | int) | round(0) }}"
