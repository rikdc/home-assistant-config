############################################################
##                                                        ##
##                  Environmental Health                  ##
##                                                        ##
############################################################

#
# Automations to add
# Indoor:
# [] - Humidity drops; warn + durn on humidifier
# [] - VOCs high, open a window
# [] - VOCs have returned to a normal level
# [] - Particulates are rising beyond a given threshold
# [] - Temperature too low for a decent night sleep
# [] - Co2 on the rise, stuffiness warning.

# [] - Mold Levels
# [] - 

# Outdoor:
# [] - Air Quality low, close windows.

input_select:
  bedroom_humidity_state:
    initial: Optimal
    options:
      - Too Dry
      - Optimal
      - Too Humid

# ios:
#   push:
#     categories:
#       - name: AirQuality
#         identifier: 'bedroom_temperature'
#         actions:
#           - identifier: 'HAS_BEEN_FED'
#             title: 'Yes'
#             behavior: 'default'
#           - identifier: 'NOT_BEEN_FED'
#             title: 'No'
#             behavior: 'default'

automation:
  # If the humidity drops too low, we want to want and if possible enable
  # the humidifier.
  # Research:
  #  - https://www.hvac.com/faq/recommended-humidity-level-home/
    # Outdoor temperature over 50˚F, indoor humidity levels shouldn’t exceed 50%
    # Outdoor temperature over 20˚F, indoor humidity levels shouldn’t exceed 40%
    # Outdoor temperature between 10˚F and 20˚F, indoor humidity levels shouldn’t exceed 35%
    # Outdoor temperature between 0˚F and 10˚F, indoor humidity levels shouldn’t exceed 30%
    # Outdoor temperature between -10˚F and 0˚F, indoor humidity levels shouldn’t exceed 25%
    # Outdoor temperature between -20˚F and -10˚F, indoor humidity levels shouldn’t exceed 20%
    # Outdoor temperature at -20˚F or lower, indoor humidity levels shouldn’t exceed 15%
  # - https://thecomfortauthority.com/home-humidity-levels-chart/
  # - https://www.easyac.net/air-conditioning-maintenance-articles/home-humidity-levels-chart-understanding-the-humidity-and-temperature-in-your-home.html
  # 
  #Ranges for this automation:
  # 0-15
  # 15-20
  # 20-35: Warning
  # 35-40: Warning
  # 40-50; Ideal
  # 50-60: Meh
  #60-65: EEps
  # 65-80: Fuu
  #80+ Dead.
  - alias: 'Humidity - Level Acceptable'
    trigger: 
      - platform: numeric_state
        entity_id:
          - sensor.unit_1_bedroom_humidity
        above: 35
        below: 45
        for:
          minutes: 10 # Allow 10 minutes, to ensure stability.
    action:
      - service: persistent_notification.create
        data:
          message: >
            Humidity has returned to comfortable levels, good job!

  - alias: Humidity - Level Too Dry
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.unit_1_bedroom_humidity
        below: 35.0
        for:
          minutes: 5 # Allow 5 minutes, to ensure stability.
    action:
      - service: persistent_notification.create
        data:
          message: >
            The humidity in the room is too dry.

  - alias: 'Humidity - Level Too Humid'
    trigger: 
      - platform: numeric_state
        entity_id:
          - sensor.unit_1_bedroom_humidity
        above: 50
        for:
          minutes: 5 # Allow 5 minutes, to ensure stability.
    action:
      - service: persistent_notification.create
        data:
          message: >
            The humidity in the room is too humid :().

  # This is a more personal one, what is your optimal temperature for sleeping,
  # working, hanging out with friends, and all that?
  #
  # Research:
  #  - https://health.clevelandclinic.org/what-is-the-ideal-sleeping-temperature-for-my-bedroom/
  #  - Typically it is suggested that the temperature in the bedroom for adults should be between 60 and 67 degrees Fahrenheit for optimal sleep. 
  #
  #  - https://www.healthline.com/health/sleep/best-temperature-to-sleep
  #     - Keeping your sleeping quarters at a temperature near 65°F (18.3°C), give or take a few degrees, is ideal.
  #
  #  - https://www.getgreenbewell.com/best-bedroom-temperature-for-sleep/
  #    - most medical professionals suggest 65 degrees
  # 
  # For Sleeping, I'm going to keep the range between 60 and 67.
  # For Working, 
  #   - https://technofaq.org/posts/2021/01/how-the-right-room-temperature-will-boost-employee-productivity/
  #   - https://www.pgi.com/blog/2018/06/what-is-the-ideal-office-temperature-for-productivity/
  # For everything else... 
  - alias: 'Temperature - House Outside Margin'
    trigger: 
      platform: numeric_state
      entity_id:
        - sensor.unit_1_bedroom_temperature
      above: 71
      below: 78
      for:
        minutes: 5 # Allow 5 minutes, to ensure stability.
    action:
      - service: persistent_notification.create
        data:
          message: >
            The house temperature is outside of the comfort

  - alias: 'Temperature - Bedroom Outside Margin'
    trigger: 
      platform: state
      entity_id:
        - sensor.bedroom1_temperature_status
        - sensor.bedroom2_temperature_status
      to: "on"
    condition:
      # We only care about this in the bedtime range, 9pm to 6am.
      condition: time
      after: "21:00:00"
      before: "06:00:00"
    action:
      - service: notify.iphone
        data:
          message: >
            Your bedroom temperature is {{ state_attr(trigger.entity_id, 'status') }} for a good night sleep.

#
# Mold Indicators
# 
# You should try to determine the right calibration factor for your house, 
# not assume the default is reasonable. Basically, a factor of 2.0 means that
# there is half the amount of temperature differential at the “coldest” part
# of the house (as the docs suggest, typically a window) than at the thermostat.
# So, given your numbers – 6 outside, 20 inside – a factor of 2 would assume 
# the window is 13 and base its condensation estimate on that temperature.
# Source: https://community.home-assistant.io/t/need-help-with-mold-indicator-sensor/152950/5

group:
  waqi:
    name: World Air Quality Index
    entities:
      - !secret waqi_primary_sensor
      - !secret waqi_secondary_sensor

binary_sensor:
  - platform: template
    sensors:
      bedroom1_temperature_status:
        value_template: >
          {{ states('sensor.unit_1_bedroom_temperature') | int < 60 or states('sensor.unit_1_bedroom_temperature') | int > 67 }}
        friendly_name: 'Bedroom Temperature'
        attribute_templates:
           status: >-
            {% if states('sensor.unit_1_bedroom_temperature') | int < 60 %}
               Too Cold
            {% elif states('sensor.unit_1_bedroom_temperature') | int > 67 %}
              Too Warm
            {% else %}
               Normal
            {% endif %}
        device_class: problem
        delay_on: 5

      bedroom2_temperature_status:
        value_template: >
          {{ states('sensor.unit_2_multisensor_bedroom_temperature') | int < 60 or states('sensor.unit_2_multisensor_bedroom_temperature') | int > 67 }}
        friendly_name: 'Bedroom Temperature'
        attribute_templates:
           status: >-
            {% if states('sensor.unit_2_multisensor_bedroom_temperature') | int < 60 %}
               Too Cold
            {% elif states('sensor.unit_2_multisensor_bedroom_temperature') | int > 67 %}
              Too Warm
            {% else %}
               Normal
            {% endif %}
        device_class: problem
        delay_on: 5 # Allow 5 minutes, to ensure stability.

#
# WAQI: Stations
#
sensor:
- platform: waqi
  token: !secret waqi_token
  locations: !secret waqi_location
  stations:  !secret waqi_stations

- platform: template
  sensors:
    aqi_stations:
      friendly_name: Stations AQI
      icon_template: mdi:radar
      entity_id:
        - sensor.time_quarterly
      value_template: >-
        {% set attribute = 'name' %}
        {% set max_hours_behind = 4 %}
        {% set cutoff = (as_timestamp(now())|int - max_hours_behind * 60 * 60) | timestamp_local %}
        {% set stations = states | selectattr('entity_id', 'in', state_attr('group.waqi', 'entity_id'))
                                 | rejectattr('attributes.time', 'lt', cutoff)
                                 | selectattr(attribute)
                                 | map(attribute=attribute)
                                 | join('|') %}
        {% if stations %}
          {{ stations }}
        {% endif %}
    aqi_stations_count:
      friendly_name: Stations AQI Number
      icon_template: mdi:radar
      value_template: >-
        {% set stations = states('sensor.aqi_stations') %}
        {% if stations != '' %}
          {{ stations.split('|') | length }}
        {% else %}
          0
        {% endif %}
#
# WAQI: Average
#
- platform: template
  sensors:
    aqi:
      friendly_name: Air Quality
      icon_template: mdi:chemical-weapon
      entity_id:
        - sensor.time_quarterly
      value_template: >-
        {% set attribute = 'state' %}
        {% set max_hours_behind = 4 %}
        {% set cutoff = (as_timestamp(now())|int - max_hours_behind * 60 * 60) | timestamp_local %}
        {% set stations = states | selectattr('entity_id', 'in', state_attr('group.waqi', 'entity_id'))
                                 | rejectattr('attributes.time', 'lt', cutoff)
                                 | selectattr(attribute)
                                 | map(attribute=attribute)
                                 | map('float')
                                 | list %}
        {% if stations %}
          {{ (stations|sum / stations|length) | round }}
        {% else %}
          unknown
        {% endif %}
    aqi_friendly:
      friendly_name: Air Quality
      icon_template: mdi:chemical-weapon
      value_template: >-
        {% set index = states('sensor.aqi') | float(-1) %}
        {% if index > 300 %}
          Hasardeux
        {% elif index > 200 %}
          Très mauvais
        {% elif index > 150 %}
          Mauvais
        {% elif index > 100 %}
          Mauvais pour les personnes sensibles
        {% elif index > 50 %}
          Modéré
        {% elif index >= 0 %}
          Bon
        {% else %}
          unknown
        {% endif %}
        
#
# WAGI: Humidity
#
- platform: template
  sensors:
    aqi_humidity:
      friendly_name: Humidity
      unit_of_measurement: '%'
      entity_id:
        - sensor.time_quarterly
      value_template: >-
        {% set attribute = 'attributes.humidity' %}
        {% set max_hours_behind = 4 %}
        {% set cutoff = (as_timestamp(now())|int - max_hours_behind * 60 * 60) | timestamp_local %}
        {% set stations = states | selectattr('entity_id', 'in', state_attr('group.waqi', 'entity_id'))
                                 | rejectattr('attributes.time', 'lt', cutoff)
                                 | selectattr(attribute)
                                 | map(attribute=attribute)
                                 | map('float')
                                 | list %}
        {% if stations %}
          {{ (stations|sum / stations|length) | round }}
        {% else %}
          unknown
        {% endif %}     

#
# WAQI: Particulate matter 2.5μm
#
- platform: template
  sensors:
    aqi_particles:
      friendly_name: PM2.5
      icon_template: mdi:chart-bubble
      unit_of_measurement: 'PPM'
      entity_id:
        - sensor.time_quarterly
      value_template: >-
        {% set attribute = 'attributes.pm_2_5' %}
        {% set max_hours_behind = 4 %}
        {% set cutoff = (as_timestamp(now())|int - max_hours_behind * 60 * 60) | timestamp_local %}
        {% set stations = states | selectattr('entity_id', 'in', state_attr('group.waqi', 'entity_id'))
                                 | rejectattr('attributes.time', 'lt', cutoff)
                                 | selectattr(attribute)
                                 | map(attribute=attribute)
                                 | map('float')
                                 | list %}
        {% if stations %}
          {{ (stations|sum / stations|length) | round }}
        {% else %}
          unknown
        {% endif %}
    aqi_particles_friendly:
      friendly_name: PM2.5
      icon_template: mdi:chart-bubble
      value_template: >-
        {% set pm25 = states('sensor.aqi_particles') | int(-1) %}
        {% if pm25 > 300 %}
          Hazardous
        {% elif pm25 > 200 %}
          Very Bad
        {% elif pm25 > 150 %}
          Bad
        {% elif pm25 > 100 %}
          Bad for sensitive people
        {% elif pm25 > 50 %}
          Bad for sensitive people
        {% elif pm25 >= 0 %}
          Good
        {% else %}
          unknown
        {% endif %}
#
# WAQI: Nitrogen dioxide
#
- platform: template
  sensors:
    aqi_nitrogen_dioxide:
      friendly_name: Dioxyde d'azote
      icon_template: mdi:car
      unit_of_measurement: 'PPM'
      entity_id:
        - sensor.time_quarterly
      value_template: >-
        {% set attribute = 'attributes.nitrogen_dioxide' %}
        {% set max_hours_behind = 4 %}
        {% set cutoff = (as_timestamp(now())|int - max_hours_behind * 60 * 60) | timestamp_local %}
        {% set stations = states | selectattr('entity_id', 'in', state_attr('group.waqi', 'entity_id'))
                                 | rejectattr('attributes.time', 'lt', cutoff)
                                 | selectattr(attribute)
                                 | map(attribute=attribute)
                                 | map('float')
                                 | list %}
        {% if stations %}
          {{ (stations|sum / stations|length) | round }}
        {% else %}
          unknown
        {% endif %}
    aqi_nitrogen_dioxide_friendly:
      friendly_name: Dioxyde d'azote
      icon_template: mdi:car
      value_template: >-
        {% set nox = states('sensor.aqi_nitrogen_dioxide') | int(-1) %}
        {% if nox > 300 %}
          Hors des mesures
        {% elif nox > 200 %}
          Très mauvais
        {% elif nox > 150 %}
          Mauvais
        {% elif nox > 100 %}
          Mauvais pour les personnes sensibles
        {% elif nox > 50 %}
          Modéré
        {% elif nox >= 0 %}
          Bon
        {% else %}
          unknown
        {% endif %}
#
# WAQI: Ozone
#
- platform: template
  sensors:
    aqi_ozone:
      friendly_name: Ozone
      icon_template: mdi:earth
      unit_of_measurement: 'PPM'
      entity_id:
        - sensor.time_quarterly
      value_template: >-
        {% set attribute = 'attributes.ozone' %}
        {% set max_hours_behind = 4 %}
        {% set cutoff = (as_timestamp(now())|int - max_hours_behind * 60 * 60) | timestamp_local %}
        {% set stations = states | selectattr('entity_id', 'in', state_attr('group.waqi', 'entity_id'))
                                 | rejectattr('attributes.time', 'lt', cutoff)
                                 | selectattr(attribute)
                                 | map(attribute=attribute)
                                 | map('float')
                                 | list %}
        {% if stations %}
          {{ (stations|sum / stations|length) | round }}
        {% else %}
          unknown
        {% endif %}
    aqi_ozone_friendly:
      friendly_name: Ozone
      icon_template: mdi:earth
      value_template: >-
        {% set ozone = states('sensor.aqi_ozone') | int(-1) %}
        {% if ozone > 300 %}
          Hazardous
        {% elif ozone > 200 %}
          Very Bad
        {% elif ozone > 150 %}
          Bad
        {% elif ozone > 100 %}
          Bad for sensitive people
        {% elif ozone > 50 %}
          Moderate
        {% elif ozone >= 0 %}
          Good
        {% else %}
          unknown
        {% endif %}
#
# WAQI: Sulphur dioxide
#
- platform: template
  sensors:
    aqi_sulphur_dioxide:
      friendly_name: Dioxyde de soufre
      icon_template: mdi:factory
      unit_of_measurement: 'PPM'
      entity_id:
        - sensor.time_quarterly
      value_template: >-
        {% set attribute = 'attributes.sulfur_dioxide' %}
        {% set max_hours_behind = 4 %}
        {% set cutoff = (as_timestamp(now())|int - max_hours_behind * 60 * 60) | timestamp_local %}
        {% set stations = states | selectattr('entity_id', 'in', state_attr('group.waqi', 'entity_id'))
                                 | rejectattr('attributes.time', 'lt', cutoff)
                                 | selectattr(attribute)
                                 | map(attribute=attribute)
                                 | map('float')
                                 | list %}
        {% if stations %}
          {{ (stations|sum / stations|length) | round }}
        {% else %}
          unknown
        {% endif %}
    aqi_sulphur_dioxide_friendly:
      friendly_name: Dioxyde de soufre
      icon_template: mdi:factory
      value_template: >-
        {% set so2 = states('sensor.aqi_sulphur_dioxide') | int(-1) %}
        {% if so2 > 300 %}
          Out of Measures
        {% elif so2 > 200 %}
          Very Bad
        {% elif so2 > 150 %}
          Bad
        {% elif so2 > 100 %}
          Bad for sensitive people
        {% elif so2 > 50 %}
          Moderate
        {% elif so2 >= 0 %}
          Good
        {% else %}
          unknown
        {% endif %}

#
# Mold Sensors
#
  # - platform: mold_indicator
  #   indoor_temp_sensor: sensor.temp
  #   indoor_humidity_sensor: sensor.humidity
  #   outdoor_temp_sensor: sensor.weather_temperature
  #   calibration_factor: 2.0