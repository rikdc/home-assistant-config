############################################################
##                                                        ##
##                  Environmental Health                  ##
##                                                        ##
############################################################

#
# Automations to add
# Indoor:
# [] - Humidity drops; warn + durn on humidifier
# [] - VOCs high, open a window
# [] - VOCs have returned to a normal level
# [] - Particulates are rising beyond a given threshold
# [] - Temperature too low for a decent night sleep
# [] - Co2 on the rise, stuffiness warning.

# [] - Mold Levels
# [] - 

# Outdoor:
# [] - Air Quality low, close windows.
automation:  
  - alias: Humidity Notifications
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.bedroom1_humidity_status
          - binary_sensor.bedroom2_humidity_status
          - binary_sensor.livingroom1_humidity_status
    action:
      - service: persistent_notification.create
        data:
          message: >
            The humidity in the {{ state_attr(trigger.entity_id, 'room') }} is {{ state_attr(trigger.entity_id, 'status') }}
      - service: notify.all
        data:
          message: >
            The humidity in the {{ state_attr(trigger.entity_id, 'room') }} is {{ state_attr(trigger.entity_id, 'status') }}

  - alias: 'Temperature - House Outside Margin'
    trigger: 
      platform: numeric_state
      entity_id:
        - sensor.unit_1_bedroom_temperature
      above: 71
      below: 78
      for:
        minutes: 5 # Allow 5 minutes, to ensure stability.
    action:
      - service: persistent_notification.create
        data:
          message: >
            The house temperature is outside of the comfort

  - alias: 'Temperature - Bedroom Outside Margin'
    trigger: 
      platform: state
      entity_id:
        - binary_sensor.bedroom1_temperature_status
        - binary_sensor.bedroom2_temperature_status
      to: "on"
    condition:
      # We only care about this in the bedtime range, 8pm to 6am.
      condition: time
      after: "20:00:00"
      before: "06:00:00"
    action:
      - service: notify.all
        data:
          message: >
            {{ state_attr(trigger.entity_id, 'room') }} temperature is {{ state_attr(trigger.entity_id, 'status') }} for a good night sleep.

  - alias: 'Temperature - Bedroom Outside Margin'
    trigger: 
      platform: state
      entity_id:
        - binary_sensor.livingroom1_temperature_status
      to: "on"
    condition:
      # We only care about this in the bedtime range, 8pm to 6am.
      condition: time
      after: "20:00:00"
      before: "06:00:00"
    action:
      - service: notify.all
        data:
          message: >
            {{ state_attr(trigger.entity_id, 'room') }} temperature is {{ state_attr(trigger.entity_id, 'status') }} for a good night sleep.
#
# Mold Indicators
# 
# You should try to determine the right calibration factor for your house, 
# not assume the default is reasonable. Basically, a factor of 2.0 means that
# there is half the amount of temperature differential at the “coldest” part
# of the house (as the docs suggest, typically a window) than at the thermostat.
# So, given your numbers – 6 outside, 20 inside – a factor of 2 would assume 
# the window is 13 and base its condensation estimate on that temperature.
# Source: https://community.home-assistant.io/t/need-help-with-mold-indicator-sensor/152950/5

binary_sensor:
  # This is a more personal one, what is your optimal temperature for sleeping,
  # working, hanging out with friends, and all that?
  #
  # Research:
  #  - https://health.clevelandclinic.org/what-is-the-ideal-sleeping-temperature-for-my-bedroom/
  #  - Typically it is suggested that the temperature in the bedroom for adults should be between 60 and 67 degrees Fahrenheit for optimal sleep. 
  #
  #  - https://www.healthline.com/health/sleep/best-temperature-to-sleep
  #     - Keeping your sleeping quarters at a temperature near 65°F (18.3°C), give or take a few degrees, is ideal.
  #
  #  - https://www.getgreenbewell.com/best-bedroom-temperature-for-sleep/
  #    - most medical professionals suggest 65 degrees
  # 
  # For Sleeping, I'm going to keep the range between 60 and 67.
  # For Working, 
  #   - https://technofaq.org/posts/2021/01/how-the-right-room-temperature-will-boost-employee-productivity/
  #   - https://www.pgi.com/blog/2018/06/what-is-the-ideal-office-temperature-for-productivity/
  # For everything else... 
  - platform: template
    sensors:
      bedroom1_temperature_status:
        value_template: >
          {{ states('sensor.unit_1_bedroom_temperature') | int < 60 or states('sensor.unit_1_bedroom_temperature') | int > 67 }}
        friendly_name: 'Bedroom Temperature'
        attribute_templates:
           status: >-
            {% if states('sensor.unit_1_bedroom_temperature') | int < 60 %}
               Too Cold
            {% elif states('sensor.unit_1_bedroom_temperature') | int > 67 %}
              Too Warm
            {% else %}
               Normal
            {% endif %}
        device_class: problem
        delay_on: 5
        delay_off: 5

      bedroom2_temperature_status:
        value_template: >
          {{ states('sensor.unit_2_multisensor_bedroom_temperature') | int < 60 or states('sensor.unit_2_multisensor_bedroom_temperature') | int > 67 }}
        friendly_name: 'Bedroom Temperature'
        attribute_templates:
           status: >-
            {% if states('sensor.unit_2_multisensor_bedroom_temperature') | int < 60 %}
               Too Cold
            {% elif states('sensor.unit_2_multisensor_bedroom_temperature') | int > 67 %}
              Too Warm
            {% else %}
               Normal
            {% endif %}
        device_class: problem
        delay_on: 5
        delay_off: 5

      livingroom1_temperature_status:
        value_template: >
          {{ states('sensor.unit_1_frontroom_temperature') | int < 60 or states('sensor.unit_1_frontroom_temperature') | int > 67 }}
        friendly_name: 'Livingroom Temperature'
        attribute_templates:
           status: >-
            {% if states('sensor.unit_1_frontroom_temperature') | int < 67 %}
               Too Cold
            {% elif states('sensor.unit_1_frontroom_temperature') | int > 75 %}
              Too Warm
            {% else %}
               Normal
            {% endif %}
        device_class: problem
        delay_on: 5
        delay_off: 5

  # If the humidity drops too low, we want to want and if possible enable
  # the humidifier.
  # Research:
  #  - https://www.hvac.com/faq/recommended-humidity-level-home/
    # Outdoor temperature over 50˚F, indoor humidity levels shouldn’t exceed 50%
    # Outdoor temperature over 20˚F, indoor humidity levels shouldn’t exceed 40%
    # Outdoor temperature between 10˚F and 20˚F, indoor humidity levels shouldn’t exceed 35%
    # Outdoor temperature between 0˚F and 10˚F, indoor humidity levels shouldn’t exceed 30%
    # Outdoor temperature between -10˚F and 0˚F, indoor humidity levels shouldn’t exceed 25%
    # Outdoor temperature between -20˚F and -10˚F, indoor humidity levels shouldn’t exceed 20%
    # Outdoor temperature at -20˚F or lower, indoor humidity levels shouldn’t exceed 15%
  # - https://thecomfortauthority.com/home-humidity-levels-chart/
  # - https://www.easyac.net/air-conditioning-maintenance-articles/home-humidity-levels-chart-understanding-the-humidity-and-temperature-in-your-home.html
  # 
  #Ranges for this automation:
  # 0-15
  # 15-20
  # 20-35: Warning
  # 35-40: Warning
  # 40-50; Ideal
  # 50-60: Meh
  #60-65: EEps
  # 65-80: Fuu
  #80+ Dead.
  - platform: template
    sensors:
      bedroom1_humidity_status:
        value_template: >
          {{ states('sensor.unit_1_bedroom_humidity') | int < 40 or states('sensor.unit_1_bedroom_humidity') | int > 50 }}
        friendly_name: 'Bedroom Humidity'
        attribute_templates:
           room: 'Downstairs Bedroom'
           status: >-
            {% set current_state = states('sensor.unit_1_bedroom_humidity')|int %}
            {% if current_state < 15 %}
              Way too dry
            {% elif current_state < 20 %}
              Too Dry
            {% elif current_state < 40 %}
              Dry
            {% elif current_state < 50 %}
              Good
            {% elif current_state < 60 %}
              Humid
            {% elif current_state < 65 %}
              Too Humid
            {% elif current_state < 80 %}
              Soaking
            {% else %}
              Saturation Point    
            {% endif %}
        device_class: problem
        delay_on: 5
        delay_off: 5

      bedroom2_humidity_status:
        value_template: >
          {{ states('sensor.bedroom2_humidity') | int < 40 or states('sensor.bedroom2_humidity') | int > 50 }}
        friendly_name: 'Bedroom Humidity'
        attribute_templates:
           room: 'Upstairs Bedroom'
           status: >-
            {% set current_state = states('sensor.bedroom2_humidity')|int %}
            {% if current_state < 15 %}
              Way too dry
            {% elif current_state < 20 %}
              Too Dry
            {% elif current_state < 40 %}
              Dry
            {% elif current_state < 50 %}
              Good
            {% elif current_state < 60 %}
              Humid
            {% elif current_state < 65 %}
              Too Humid
            {% elif current_state < 80 %}
              Soaking
            {% else %}
              Saturation Point    
            {% endif %}
        device_class: problem
        delay_on: 5
        delay_off: 5

      livingroom1_humidity_status:
        value_template: >
          {{ states('sensor.unit_1_frontroom_humidity') | int < 40 or states('sensor.unit_1_frontroom_humidity') | int > 50 }}
        friendly_name: 'Living Room Humidity'
        attribute_templates:
           room: 'Upstairs Bedroom'
           status: >-
            {% set current_state = states('sensor.unit_1_frontroom_humidity')|int %}
            {% if current_state < 15 %}
              Way too dry
            {% elif current_state < 20 %}
              Too Dry
            {% elif current_state < 40 %}
              Dry
            {% elif current_state < 50 %}
              Good
            {% elif current_state < 60 %}
              Humid
            {% elif current_state < 65 %}
              Too Humid
            {% elif current_state < 80 %}
              Soaking
            {% else %}
              Saturation Point    
            {% endif %}
        device_class: problem
        delay_on: 5
        delay_off: 5

sensor:
  - platform: filter
    name: Bedroom2 Humidity
    entity_id: sensor.unit_2_multisensor_bedroom_humidity
    filters:
      - filter: outlier
        window_size: 4
        radius: 4.0
      - filter: lowpass
        time_constant: 10
        precision: 2

#
# Mold Sensors
#
  # - platform: mold_indicator
  #   indoor_temp_sensor: sensor.temp
  #   indoor_humidity_sensor: sensor.humidity
  #   outdoor_temp_sensor: sensor.weather_temperature
  #   calibration_factor: 2.0