##    input_select.house_presence – keeps track of who is home
##    input_select.*room*_presence – keeps track of individual room presence
##    input_select.*person*_location – keeps track of where people are (and is more detailed than the home/away person.*person* entity)

input_boolean:
  guests:
    initial: off

  bathroom_schedule:
    initial: on

sensor:
  # Bathroom

  ## Area Entities
  - platform: history_stats
    name: Stats - Bathroom Bright
    entity_id: binary_sensor.area_bathroom_bright
    state: "on"
    type: ratio
    end: "{{ now() }}"
    duration:
      days: 7
  - platform: history_stats
    name: Stats - Bathroom Humidity Trend
    entity_id: binary_sensor.area_bathroom_humidity_trend
    state: "on"
    type: ratio
    end: "{{ now() }}"
    duration:
      days: 7
  - platform: history_stats
    name: Stats - Bathroom Occupied
    entity_id: binary_sensor.area_bathroom_occupied
    state: "on"
    type: ratio
    end: "{{ now() }}"
    duration:
      days: 7
  - platform: history_stats
    name: Stats - Bathroom Temperature Trend
    entity_id: sensor.motion_bathroom_air_temperature
    state: "on"
    type: ratio
    end: "{{ now() }}"
    duration:
      days: 7
  - platform: history_stats
    name: Stats - Bathroom Motion
    entity_id: binary_sensor.motion_bathroom_home_security_motion_detection
    state: "on"
    type: ratio
    end: "{{ now() }}"
    duration:
      days: 7
  # - platform: history_stats
  #   name: Stats - Bathroom Schedule
  #   entity_id: input_boolean.bathroom_schedule
  #   state: "on"
  #   type: ratio
  #   end: "{{ now() }}"
  #   duration:
  #     days: 7

  ## Device Entities
  # - platform: history_stats
  #   name: Stats - Bathroom MOT-01 occupancy
  #   entity_id: binary_sensor.mot_01_occupancy
  #   state: "on"
  #   type: ratio
  #   end: "{{ now() }}"
  #   duration:
  #     days: 7
  # - platform: history_stats
  #   name: Stats - Bathroom Multisensor Motion
  #   entity_id: binary_sensor.bathroom_multisensor_motion
  #   state: "on"
  #   type: ratio
  #   end: "{{ now() }}"
  #   duration:
  #     days: 7

homeassistant:
  customize:
    package.occupancy:
      room_determination: &room_determination
        state: >
          {% set h = states(trigger.entity_id) %}
          {% if h == 'unit2livingroom' %}
            Upstairs
          {% elif h == 'unit2Front' %}
            Office
          {% elif h == 'unit1FrontRoom' %}
            Downstairs
          {% else %}
            {{ h }}
          {% endif %}

      occupancy_states: &occupancy_states
        options:
          - Unknown
          - Empty
          - Someone
          - Guests
          - Extended Away

      location_states: &location_states
        options:
          - Unknown
          - Just Arrived
          - Home
          - Just Left
          - Away
          - Extended Away
          - Kitchen
          - Downstairs
          - Upstairs
          - Downstairs Livingroom
          - Upstairs Livingroom
          - Bedroom
          - Bathroom
          - Upper Office

binary_sensor:
  - platform: trend
    sensors:
      # Humidity

      area_bathroom_humidity_trend:
        friendly_name: Area - Bathroom Humidity Trend
        entity_id: sensor.motion_bathroom_humidity
        sample_duration: 1200
        max_samples: 6
        min_gradient: 0.011
        device_class: moisture

  # Bathroom
  - platform: bayesian
    name: Area - Bathroom Occupied
    prior: 0.2083
    device_class: occupancy
    probability_threshold: 0.70
    observations:
      - platform: "state"
        entity_id: binary_sensor.area_bathroom_humidity_trend
        prob_given_true: 0.0768
        prob_given_false: 0.0020
        to_state: "on"
      - platform: "state"
        entity_id: binary_sensor.motion_bathroom_home_security_motion_detection
        prob_given_true: 0.6720
        prob_given_false: 0.0531
        to_state: "on"
      - platform: "state"
        entity_id: sensor.motion_bathroom_illuminance
        prob_given_true: 1.2048
        prob_given_false: 0.2853
        to_state: "on"

  - platform: template
    sensors:
      main_floor_occupancy:
        friendly_name: "Ground floor occupied"
        device_class: "occupancy"
        delay_off:
          minutes: 5
        delay_on:
          seconds: 3
        value_template: >-
          {{ (is_state('input_boolean.home_occupied', 'on')
              and (
                   is_state('binary_sensor.bedroom1_occupied', 'on'))
                or is_state('binary_sensor.unit1_frontroom_occupied', 'on')
              )
          }}

      bedroom1_occupied:
        friendly_name: "Bedroom1 Occupancy"
        device_class: "occupancy"
        delay_off:
          minutes: 5
        value_template: >-
          {{ is_state('binary_sensor.unit_1_bedroom_motion', 'on' )
              or (is_state('input_boolean.bedtime', 'on'))
          }}

      unit1_frontroom_occupied:
        friendly_name: "Living Room Occupancy"
        device_class: "occupancy"
        delay_off:
          minutes: 5
        delay_on:
          seconds: 3
        value_template: >-
          {{ is_state('media_player.50_tcl_roku_tv', 'playing')
                or is_state('media_player.50_tcl_roku_tv', 'on')
                or is_state('binary_sensor.motion_frontroom_home_security_motion_detection', 'on')
                or is_state('binary_sensor.downstairs_person_motion', 'on')
                or is_state('sensor.richard_room_presence', 'unit1FrontRoom')
                or is_state('sensor.stefanie_room_presence', 'unit1FrontRoom')
                or is_state('sensor.jenn_room_presence', 'unit1FrontRoom')
          }}

      unit1_backroom_occupancy:
        friendly_name: "Back Room Occupancy"
        device_class: "occupancy"
        delay_off:
          minutes: 5
        delay_on:
          seconds: 3
        value_template: >-
          {{ is_state('binary_sensor.motion_living_room_home_security_motion_detection', 'on')
                or is_state('sensor.richard_room_presence', 'pi0-lower-back')
                or is_state('sensor.stefanie_room_presence', 'pi0-lower-back')
                or is_state('sensor.jenn_room_presence', 'pi0-lower-back')
          }}

      #
      # First Floor
      #
      first_floor_occupancy:
        friendly_name: "First floor occupancy"
        device_class: "occupancy"
        delay_off:
          minutes: 5
        delay_on:
          seconds: 3
        value_template: >-
          {{ (is_state('input_boolean.home_occupied', 'on')
                and (
                     is_state('binary_sensor.first_floor_bathroom_occupancy', 'on')
                  or is_state('binary_sensor.unit2_livingroom_occupancy', 'on')
                  or is_state('input_select.richard_location', 'Upstairs')
                  or is_state('input_select.stefanie_location', 'Upstairs')
                  or is_state('input_select.jenn_location', 'Upstairs')
                ))
          }}

      first_floor_bathroom_occupancy:
        friendly_name: "Bathroom2 occupied"
        device_class: "occupancy"
        delay_off:
          minutes: 5
        value_template: >-
          {{ is_state('binary_sensor.motion_bathroom2_home_security_motion_detection', 'on') }}

      unit2_livingroom_occupancy:
        friendly_name: "Upper Living Room Occupancy"
        device_class: "occupancy"
        delay_off:
          minutes: 5
        delay_on:
          seconds: 3
        value_template: >-
          {{ is_state('binary_sensor.first_floor_occupancy', 'on')
              and is_state('media_player.roku_streaming_stick', 'playing')
            }}

  - platform: template
    sensors:
      office_computer_on:
        value_template: "{{ states('sensor.office_power_electricity_w_meter') | int > 40 }}"

  - platform: template
    sensors:
      unit2_office_occupancy:
        friendly_name: "Unit2 Office Occupied"
        device_class: "occupancy"
        delay_off:
          minutes: 5
        delay_on:
          seconds: 3
        value_template: >-
          {{ (is_state('input_boolean.home_occupied', 'on')
             and is_state('binary_sensor.unit_1_experiment_rcwl0516_movement', 'on')) }}

group:
  person_home_away:
    name: Person Locations
    entities:
      - person.richard
      - person.stefanie
      - person.jenn

input_select:
  house_presence:
    name: Home Presence
    initial: Unknown
    <<: *occupancy_states

  stefanie_location:
    <<: *location_states

  richard_location:
    <<: *location_states

  jenn_location:
    <<: *location_states

template:
  - trigger:
      - platform: state
        entity_id:
          - sensor.4246807c524d46c58df145284816b8e1_100_1_room_presence
      - platform: zone
        entity_id: !secret person1_entity
        zone: zone.home
    sensor:
      - name: "Person1 Location"
        <<: *room_determination

  - trigger:
      - platform: state
        entity_id:
          - sensor.186ca552_d54b_417c_b812_9778b0252aa7_room_presence
      - platform: zone
        entity_id: !secret person2_entity
        zone: zone.home
    sensor:
      - name: "Person2 Location"
        <<: *room_determination

  - trigger:
      - platform: state
        entity_id:
          - sensor.df8d2ff3_980f_43df_ba53_7482bbf25627_room_presence
      - platform: zone
        entity_id: !secret person3_entity
        zone: zone.home
    sensor:
      - name: "Person3 Location"
        <<: *room_determination

automation:
  - id: "37f15be9-acd5-49db-bdad-ddd5ce35ac2a"
    alias: "Set home to occupied"
    trigger:
      platform: state
      entity_id:
        - !secret person1_entity
        - !secret person2_entity
        - !secret person3_entity
      to: home
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.home_occupied

  - id: "04bd834f-d3ac-4e45-a440-807fc26d5d39"
    alias: "Set home to unoccupied"
    trigger:
      platform: state
      entity_id:
        - !secret person1_entity
        - !secret person2_entity
        - !secret person3_entity
      from: home
      to: not_home
      for:
        minutes: 5
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: !secret person1_entity
          state: not_home
        - condition: state
          entity_id: !secret person2_entity
          state: not_home
        - condition: state
          entity_id: !secret person3_entity
          state: not_home
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.home_occupied

  - id: "0d759a38-f0c8-4897-9255-10122b40f16c"
    alias: "Away Status: Extended Away"
    trigger:
      platform: state
      entity_id:
        - !secret person1_entity
        - !secret person2_entity
        - !secret person3_entity
      to: not_home
      for:
        hours: 24
    action:
      - service: input_select.select_option
        data:
          entity_id: "{{ 'input_select.' + trigger.entity_id[7:] + '_loctation' }}"
          option: "Extended Away"

  - id: "a7294d7b-ffe0-4a59-8e72-a15be47463ec"
    alias: "Away Status: Leaving"
    trigger:
      platform: state
      entity_id:
        - !secret person1_entity
        - !secret person2_entity
        - !secret person3_entity
      to: not_home
    action:
      - service: input_select.select_option
        data:
          entity_id: "{{ 'input_select.' + trigger.entity_id[7:] + '_location' }}"
          option: "Just Left"
      - service: tts.cloud_say
        data:
          entity_id: media_player.multi_room_controller
          message: >
            {{ trigger.entity_id[7:] }} has just left.
      - delay:
          minutes: 1
      - service: input_select.select_option
        data:
          entity_id: "{{ 'input_select.' + trigger.entity_id[7:] + '_location' }}"
          option: "Away"
      - service: tts.cloud_say
        data:
          entity_id: media_player.multi_room_controller
          message: >
            {{ trigger.entity_id[7:] }} is now away.
    mode: parallel

  - id: "231ea913-dde3-495e-aa9f-3817671010b6"
    alias: "Away Status: Arriving"
    trigger:
      platform: state
      entity_id:
        - !secret person1_entity
        - !secret person2_entity
        - !secret person3_entity
      to: home
    action:
      - service: input_select.select_option
        data:
          entity_id: "{{ 'input_select.' + trigger.entity_id[7:] + '_location' }}"
          option: "Just Arrived"
      - service: tts.cloud_say
        data:
          entity_id: media_player.multi_room_controller
          message: >
            {{ trigger.entity_id[7:] }} has just arrived.
      - delay:
          minutes: 1
      - service: input_select.select_option
        data:
          entity_id: "{{ 'input_select.' + trigger.entity_id[7:] + '_location' }}"
          option: "Home"

  - id: "a8d9090d-b313-4fdd-8722-5d02bf181528"
    alias: "Occupancy: Person 1 Room Location"
    trigger:
      - platform: state
        entity_id:
          - sensor.stefanie_room_presence # Person 1
          - sensor.richard_room_presence # Person 2
          - sensor.jenn_room_presence # Person 3
      - platform: zone
        entity_id:
          - !secret person1_entity
        zone: zone.home
    action:
      - service: input_select.select_option
        data:
          entity_id: "{{ 'input_select.' + trigger.entity_id[7:-14] + '_location' }}"
          option: >
            {% set h = states(trigger.entity_id) %}
            {% if h == 'unit2livingroom' %}
              Upstairs
            {% elif h == 'unit2Front' %}
              Upper Office
            {% elif h == 'unit1FrontRoom' %}
              Downstairs
            {% elif h == 'pi0-lower-back' %}
              Downstairs
            {% else %}
              {{ h }}
            {% endif %}

  - id: "f2f4f55f-d1a5-4e06-91f0-0dfce4292b69"
    alias: "Room Location"
    trigger:
      platform: state
      entity_id:
        - sensor.df8d2ff3_980f_43df_ba53_7482bbf25627_room_presence
      to: "unit2livingroom"
      for:
        minutes: 2
    action:
      - service: tts.cloud_say
        data:
          entity_id: media_player.multi_room_controller
          message: >
            {{ trigger.entity_id[7:] }} is in the upper living room.

  - id: "be3a7395-ef91-48b6-b8a2-547a5cc1b164"
    alias: "Room Location: Richard"
    trigger:
      platform: state
      entity_id: sensor.186ca552_d54b_417c_b812_9778b0252aa7_room_presence
      to: "unit2Front"
      for:
        minutes: 2
    action:
      - service: tts.cloud_say
        data:
          entity_id: media_player.multi_room_controller
          message: >
            {% if ((now() - states.binary_sensor.motion_living_room_home_security_motion_detection.last_changed).seconds < 60 ) %}
              Richard is in the living room
            {% else %}
              Richard is in the office
            {% endif %}
