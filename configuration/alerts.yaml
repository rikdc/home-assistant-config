alert:
  home_automation:
    name: Home automation is disabled
    done_message: Home automation enabled
    entity_id: input_boolean.allow_automation_execution
    state: "off"
    repeat: 30
    can_acknowledge: True
    #skip_first: True
    notifiers:
      - home_automation

  bedroom1_humidity:
    name: Bedroom1 Humidity is too dry
    done_message: Humidity is back to normal
    entity_id: binary_sensor.bedroom1_humidity_status
    repeat:
      - 15
      - 30
      - 60
    can_acknowledge: true
    notifiers:
      - admins

  bedroom2_humidity:
    name: Bedroom2 Humidity is too dry
    done_message: Humidity is back to normal
    entity_id: binary_sensor.bedroom2_humidity_status
    repeat:
      - 15
      - 30
      - 60
    can_acknowledge: true
    notifiers:
      - admins

  livingroom1_humidity:
    name: Livingroom Humidity is too dry
    done_message: Humidity is back to normal
    entity_id: binary_sensor.livingroom1_humidity_status
    repeat:
      - 15
      - 30
      - 60
    can_acknowledge: true
    notifiers:
      - admins

  basement_mold_warning:
    name: "Notify if basement mold sensor is too high"
    done_message: Basement mold risk is normal
    entity_id: binary_sensor.basement_mold_status
    #title: "Possible Mold Growth"
    #message: "It's possible to have mold growth because the mold indicator is"
    can_acknowledge: true
    repeat:
      - 15
      - 30
      - 60
    notifiers:
      - admins

  #sensors_unavailable:
  # - id: "d07e3bb9-5109-4d76-a883-bc025fc359f0"
  # alias: "System: Important Sensors are unavailable"
  # trigger:
  #   platform: state
  #   entity_id: binary_sensor.dws_unavailable
  #   to: "on"
  # action:
  #   - service: notify.admins
  #     data_template:
  #       message: "One or more of the alarm sensors is not reporting status changes. Check them!"
  # mode: single

  # room_is_humid:

  #   - alias: AirQ - Indoor Humidity Notifications
  #   trigger:
  #     - platform: state
  #       entity_id:
  #         - binary_sensor.bedroom1_humidity_status
  #         - binary_sensor.bedroom2_humidity_status
  #         - binary_sensor.livingroom1_humidity_status
  #   action:
  #     - service: persistent_notification.create
  #       data:
  #         notification_id: "{{ trigger.entity_id }}"
  #         message: >
  #           The humidity in {{ state_attr(trigger.entity_id, 'room') }} is {{ state_attr(trigger.entity_id, 'reason') }}
  #     - service: notify.all
  #       data:
  #         notification_id: "{{ trigger.entity_id }}"
  #         message: >
  #           The humidity in the {{ state_attr(trigger.entity_id, 'room') }} is {{ state_attr(trigger.entity_id, 'reason') }}
